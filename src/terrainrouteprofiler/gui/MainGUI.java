/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package terrainrouteprofiler.gui;

//import elevationprofiler.FormatType;
//import elevationprofiler.geographic.GeodeticDD;
//import elevationprofiler.io.ConfigurationManager;
//import elevationprofiler.io.ProfileWriter;

import java.io.File;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import terrainrouteprofiler.geographic.RouteContainer;

/**
 *
 * @author ms6401
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Create required global variables
     */
    //ProfileWriter writer = new ProfileWriter();
    //ConfigurationManager options = new ConfigurationManager();

    /// This is the current working directory for the program
    private String m_currentWorkingDirectory;
    
    /// This is the kml file path that we are going to use
    private String m_kmlFilePath;
    
    /// This is the container for storing and computing our route
    private RouteContainer m_routeContainer;
    
    /**
     * Set a default configuration
     */
    private void setDefaultOptions(){
    
        /// use this directory as CWD
        m_currentWorkingDirectory = ".";
        
        /// set the file path to null
        m_kmlFilePath = null;
        
        /// Create the route container
        m_routeContainer = new RouteContainer();
        
    }
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        setDefaultOptions();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        KML_File_Info_Panel = new javax.swing.JPanel();
        KML_Info_Header = new javax.swing.JLabel();
        CoordinateInfoPane = new javax.swing.JScrollPane();
        CoordinateInfoText = new javax.swing.JTextArea();
        fileInfoNumCoordinatesLabel = new javax.swing.JLabel();
        fileInfoNumCoordinatesText = new javax.swing.JTextField();
        fileInfoCoordinateListLabel = new javax.swing.JLabel();
        GlobalInfoTabbedPanel = new javax.swing.JTabbedPane();
        KMLInfoTabPanel = new javax.swing.JPanel();
        currentKMLFileTag = new javax.swing.JLabel();
        currentKMLFileVal = new javax.swing.JTextField();
        geographicInfoLabel = new javax.swing.JLabel();
        numberCoordinateTag = new javax.swing.JLabel();
        numberCoordinateVal = new javax.swing.JTextField();
        coordinateListLabel = new javax.swing.JLabel();
        coordinateListPane = new javax.swing.JScrollPane();
        coordinateListText = new javax.swing.JTextArea();
        routeDistancePanel = new javax.swing.JLabel();
        routeDistanceText = new javax.swing.JTextField();
        OutputFormatTabPanel = new javax.swing.JPanel();
        ConfigSettingsLabel = new javax.swing.JLabel();
        StepCountSpinner = new javax.swing.JSpinner();
        StepCountLabel = new javax.swing.JLabel();
        buildElevationButton = new javax.swing.JButton();
        PlotFormatComboBox = new javax.swing.JComboBox();
        PlotFormatLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        ElevationLocationLabel = new javax.swing.JLabel();
        ElevationLocationButton = new javax.swing.JButton();
        ElevationLocationValue = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        OpenKMLItem = new javax.swing.JMenuItem();
        QuitItem = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();

        KML_File_Info_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        KML_Info_Header.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        KML_Info_Header.setText("KML File Information");

        CoordinateInfoText.setEditable(false);
        CoordinateInfoText.setColumns(20);
        CoordinateInfoText.setRows(5);
        CoordinateInfoPane.setViewportView(CoordinateInfoText);

        fileInfoNumCoordinatesLabel.setText("Number of Coordinates:");

        fileInfoNumCoordinatesText.setEditable(false);
        fileInfoNumCoordinatesText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fileInfoNumCoordinatesText.setText("-");
        fileInfoNumCoordinatesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileInfoNumCoordinatesTextActionPerformed(evt);
            }
        });

        fileInfoCoordinateListLabel.setText("Coordinate List");

        javax.swing.GroupLayout KML_File_Info_PanelLayout = new javax.swing.GroupLayout(KML_File_Info_Panel);
        KML_File_Info_Panel.setLayout(KML_File_Info_PanelLayout);
        KML_File_Info_PanelLayout.setHorizontalGroup(
            KML_File_Info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KML_File_Info_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KML_File_Info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(KML_Info_Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(KML_File_Info_PanelLayout.createSequentialGroup()
                        .addComponent(CoordinateInfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(KML_File_Info_PanelLayout.createSequentialGroup()
                        .addComponent(fileInfoNumCoordinatesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fileInfoNumCoordinatesText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(KML_File_Info_PanelLayout.createSequentialGroup()
                        .addComponent(fileInfoCoordinateListLabel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        KML_File_Info_PanelLayout.setVerticalGroup(
            KML_File_Info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KML_File_Info_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KML_Info_Header, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KML_File_Info_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileInfoNumCoordinatesLabel)
                    .addComponent(fileInfoNumCoordinatesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileInfoCoordinateListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CoordinateInfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        currentKMLFileTag.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        currentKMLFileTag.setText("Current KML File");

        currentKMLFileVal.setEditable(false);
        currentKMLFileVal.setText("No KML File Selected");
        currentKMLFileVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentKMLFileValActionPerformed(evt);
            }
        });

        geographicInfoLabel.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        geographicInfoLabel.setText("Geographic Information");

        numberCoordinateTag.setText("Number of Coordinates:");

        numberCoordinateVal.setEditable(false);
        numberCoordinateVal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberCoordinateVal.setText("-");

        coordinateListLabel.setText("Coordinate List");

        coordinateListText.setColumns(20);
        coordinateListText.setRows(5);
        coordinateListPane.setViewportView(coordinateListText);

        routeDistancePanel.setText("Route Distance:");

        routeDistanceText.setEditable(false);
        routeDistanceText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        routeDistanceText.setText("-");

        javax.swing.GroupLayout KMLInfoTabPanelLayout = new javax.swing.GroupLayout(KMLInfoTabPanel);
        KMLInfoTabPanel.setLayout(KMLInfoTabPanelLayout);
        KMLInfoTabPanelLayout.setHorizontalGroup(
            KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KMLInfoTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(KMLInfoTabPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coordinateListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coordinateListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, KMLInfoTabPanelLayout.createSequentialGroup()
                        .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(currentKMLFileTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currentKMLFileVal, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
                        .addGap(99, 99, 99)
                        .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(geographicInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                            .addGroup(KMLInfoTabPanelLayout.createSequentialGroup()
                                .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numberCoordinateTag, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                                    .addComponent(routeDistancePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numberCoordinateVal, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                    .addComponent(routeDistanceText))))))
                .addContainerGap())
        );
        KMLInfoTabPanelLayout.setVerticalGroup(
            KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KMLInfoTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentKMLFileTag)
                    .addComponent(geographicInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KMLInfoTabPanelLayout.createSequentialGroup()
                        .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(currentKMLFileVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberCoordinateVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(KMLInfoTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(routeDistanceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(routeDistancePanel)))
                    .addComponent(numberCoordinateTag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addComponent(coordinateListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coordinateListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        GlobalInfoTabbedPanel.addTab("KML Information", KMLInfoTabPanel);

        ConfigSettingsLabel.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        ConfigSettingsLabel.setText("Configuration Settings");

        StepCountSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 3, 10001, 1));
        StepCountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                StepCountSpinnerStateChanged(evt);
            }
        });

        StepCountLabel.setText("Waypoint Max Distance: ");

        buildElevationButton.setText("Build Elevation Profile");
        buildElevationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildElevationButtonActionPerformed(evt);
            }
        });

        PlotFormatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Matlab Plot (\".m\")", "Python SciPy Plot (\".py\")" }));
        PlotFormatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlotFormatComboBoxActionPerformed(evt);
            }
        });

        PlotFormatLabel.setText("Plot Output Format: ");

        jLabel1.setText("Current Elevation Model Type");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DTED" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        ElevationLocationLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ElevationLocationLabel.setText("DTED Location: ");

        ElevationLocationButton.setText("Change Location");
        ElevationLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElevationLocationButtonActionPerformed(evt);
            }
        });

        ElevationLocationValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ElevationLocationValue.setText("No DTED Given");
        ElevationLocationValue.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel2.setText("Output Filename: ");

        jLabel3.setText("output");

        jButton1.setText("Change");

        javax.swing.GroupLayout OutputFormatTabPanelLayout = new javax.swing.GroupLayout(OutputFormatTabPanel);
        OutputFormatTabPanel.setLayout(OutputFormatTabPanelLayout);
        OutputFormatTabPanelLayout.setHorizontalGroup(
            OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                        .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OutputFormatTabPanelLayout.createSequentialGroup()
                                .addComponent(PlotFormatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PlotFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StepCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OutputFormatTabPanelLayout.createSequentialGroup()
                                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                                        .addGap(0, 2, Short.MAX_VALUE)
                                        .addComponent(ElevationLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ElevationLocationValue, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ElevationLocationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(2, 2, 2))
                            .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ConfigSettingsLabel)
                                    .addComponent(StepCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(99, 99, 99)
                        .addComponent(buildElevationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OutputFormatTabPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(307, 307, 307)))
                .addContainerGap())
        );
        OutputFormatTabPanelLayout.setVerticalGroup(
            OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ElevationLocationValue)
                        .addComponent(ElevationLocationLabel))
                    .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                        .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OutputFormatTabPanelLayout.createSequentialGroup()
                                .addComponent(ConfigSettingsLabel)
                                .addGap(23, 23, 23)
                                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(StepCountLabel)
                                    .addComponent(StepCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(buildElevationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PlotFormatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PlotFormatLabel))
                        .addGap(13, 13, 13)
                        .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ElevationLocationButton)))
                .addGap(18, 18, 18)
                .addGroup(OutputFormatTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        StepCountSpinner.getAccessibleContext().setAccessibleDescription("The entire length of the route will be quantized into a finite number of steps.  That will allow for regions where waypoints are far apart to have detail inbetween waypoints.  This options selects the number of steps.");
        StepCountLabel.getAccessibleContext().setAccessibleDescription("The entire length of the route will be quantized into a finite number of steps.  That will allow for regions where waypoints are far apart to have detail inbetween waypoints.  This options selects the number of steps.");

        GlobalInfoTabbedPanel.addTab("Output Information", OutputFormatTabPanel);

        FileMenu.setForeground(new java.awt.Color(176, 176, 176));
        FileMenu.setText("File");

        OpenKMLItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenKMLItem.setText("Open KML File");
        OpenKMLItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenKMLItemActionPerformed(evt);
            }
        });
        FileMenu.add(OpenKMLItem);

        QuitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        QuitItem.setText("Quit");
        QuitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitItemActionPerformed(evt);
            }
        });
        FileMenu.add(QuitItem);

        MenuBar.add(FileMenu);

        EditMenu.setForeground(new java.awt.Color(176, 176, 176));
        EditMenu.setText("Edit");
        MenuBar.add(EditMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GlobalInfoTabbedPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GlobalInfoTabbedPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QuitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_QuitItemActionPerformed

    /**
     * Open KML File Event Parser
     * 
     * @param evt Java Swing event 
     */
    private void OpenKMLItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenKMLItemActionPerformed

        //create a file chooser
        JFileChooser fc = new JFileChooser();
        
        //set the current directory
        fc.setCurrentDirectory(new File(this.m_currentWorkingDirectory));

        //show the dialog and get user input
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            
            // grab the selected file
            File file = fc.getSelectedFile();
            
            // set the working directory to where the kml file is
            m_currentWorkingDirectory = file.getPath();
            
            // get the file path for the KML file
            try {
                m_kmlFilePath = file.getCanonicalPath();
            } catch (IOException e) {
                System.out.println("ERROR: " + e.getMessage());
                System.exit(1);
            }

            // construct the route
            m_routeContainer.importRouteKML(file.getAbsolutePath());

        }

        //update the user interface
        update_gui();
    }

    /**
     * Update the User Interface
    */
    private void update_gui() {

        //update the filename 
        currentKMLFileVal.setText(m_kmlFilePath);
        
        //compute the total distance between points
        //routeDistanceText.setText(String.format("%.4f", routeInfo.distance) + "m");

        //update the text in the CoordinateInfoPane
        coordinateListText.setText(createCoordinateInfoText());

        //update the coordinate number variable
        //numberCoordinateVal.setText(Integer.toString(routeInfo.coordinateList.size()));

        //as good policy, lets make sure we keep our step count reasonably high
        //writer.set_max_gap(routeInfo.coordinateList.size() * 2);

        //StepCountSpinner.setValue((int) writer.max_point_gap);


    }//GEN-LAST:event_OpenKMLItemActionPerformed

    private void fileInfoNumCoordinatesTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileInfoNumCoordinatesTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileInfoNumCoordinatesTextActionPerformed
    private void currentKMLFileValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentKMLFileValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentKMLFileValActionPerformed

    private void buildElevationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildElevationButtonActionPerformed

        //writer.write_profile(routeInfo, options, this);

    }//GEN-LAST:event_buildElevationButtonActionPerformed

    private void StepCountSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_StepCountSpinnerStateChanged
        // TODO add your handling code here:
        SpinnerModel dataModel = StepCountSpinner.getModel();
        if (dataModel instanceof SpinnerNumberModel) {
        //    writer.set_max_gap(((SpinnerNumberModel) dataModel).getNumber().intValue());
        }
    }//GEN-LAST:event_StepCountSpinnerStateChanged

    private void PlotFormatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlotFormatComboBoxActionPerformed

        // TODO add your handling code here:
        JComboBox cb = (JComboBox) evt.getSource();
        String actionName = (String) cb.getSelectedItem();

        //set the type as Python
        if (actionName.contains(".py")) {
            //options.format_type = FormatType.PYTHON;
        } //set the type as Matlab
        else if (actionName.contains(".m")) {
            //options.format_type = FormatType.MATLAB;
        }

    }//GEN-LAST:event_PlotFormatComboBoxActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * Action when user presses the Elevation Location Directory Button
     * @param evt 
     */
    private void ElevationLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElevationLocationButtonActionPerformed
        
        //create a file chooser
        JFileChooser fc = new JFileChooser();
        
        //set the current directory
        //fc.setCurrentDirectory(new File(options.current_directory));
        
        //ensure that directories are the only options
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        //show the dialog and get user input
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            
            //retrieve the dted location
            File file = fc.getSelectedFile();
            
            //make sure that the directory exists
            if( file.isDirectory() && file.exists() ){
                
                //set the absolute location
                //options.dted_root_location = file.getAbsolutePath();
                
                //update the label
                //ElevationLocationValue.setText(options.dted_root_location);
                
            }
            
        }
        
    }//GEN-LAST:event_ElevationLocationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ConfigSettingsLabel;
    private javax.swing.JScrollPane CoordinateInfoPane;
    private javax.swing.JTextArea CoordinateInfoText;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JButton ElevationLocationButton;
    private javax.swing.JLabel ElevationLocationLabel;
    private javax.swing.JLabel ElevationLocationValue;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JTabbedPane GlobalInfoTabbedPanel;
    private javax.swing.JPanel KMLInfoTabPanel;
    private javax.swing.JPanel KML_File_Info_Panel;
    private javax.swing.JLabel KML_Info_Header;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem OpenKMLItem;
    private javax.swing.JPanel OutputFormatTabPanel;
    private javax.swing.JComboBox PlotFormatComboBox;
    private javax.swing.JLabel PlotFormatLabel;
    private javax.swing.JMenuItem QuitItem;
    private javax.swing.JLabel StepCountLabel;
    private javax.swing.JSpinner StepCountSpinner;
    private javax.swing.JButton buildElevationButton;
    private javax.swing.JLabel coordinateListLabel;
    private javax.swing.JScrollPane coordinateListPane;
    private javax.swing.JTextArea coordinateListText;
    private javax.swing.JLabel currentKMLFileTag;
    private javax.swing.JTextField currentKMLFileVal;
    private javax.swing.JLabel fileInfoCoordinateListLabel;
    private javax.swing.JLabel fileInfoNumCoordinatesLabel;
    private javax.swing.JTextField fileInfoNumCoordinatesText;
    private javax.swing.JLabel geographicInfoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel numberCoordinateTag;
    private javax.swing.JTextField numberCoordinateVal;
    private javax.swing.JLabel routeDistancePanel;
    private javax.swing.JTextField routeDistanceText;
    // End of variables declaration//GEN-END:variables

    String createCoordinateInfoText() {

        String output = "";

        //coordinate list
        int cnt = 0;
        //for (GeodeticDD coord : routeInfo.coordinateList) {
        //    cnt++;
        //    output += String.valueOf(cnt) + ": " + coord.toString() + "\n";
        //}

        //total distance


        return output;
    }
}
